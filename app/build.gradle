// load custom gradle helper methods
apply from: "$rootDir/gradleHelper.gradle"

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    // explicitly load local secrets here
    loadProperties("localSecrets.properties")

    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    def applicationIdentifier = "com.java2days.j2ddemo"
    def applicationName = "J2D Demo"

    defaultConfig {
        applicationId applicationIdentifier
        minSdkVersion 23
        targetSdkVersion 23
        versionCode getBuildNumber()
        versionName getVersionAsString()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // enable crashlytics
        buildConfigField("boolean", "USE_CRASHLYTICS", "true");
        ext.enableCrashlytics = true
        ext.betaDistributionReleaseNotes=getChangelog()

        // app name
        resValue "string", "app_name", applicationName
    }
    productFlavors {
        def branchSuffix = getSafeBranchIdentifier()
        // flavor specific identifier
        def flavorApplicationId = "${applicationIdentifier}${branchSuffix?.length() > 0 ? "." : "" }${branchSuffix}"
        // flavor specific app name
        def flavorApplicationName = "${applicationName}${branchSuffix?.length() > 0 ? "-" : "" }${branchSuffix}"

        localdev {
            applicationId "${flavorApplicationId}.local"

            // disable Crashlytics for local builds
            buildConfigField("boolean", "USE_CRASHLYTICS", "false");
            ext.enableCrashlytics = false

            // app name
            resValue "string", "app_name", flavorApplicationName
        }
        beta {
            // base package.<branch>.beta
            applicationId "${flavorApplicationId}.beta"

            // app name
            resValue "string", "app_name", "$flavorApplicationName Beta"
        }
        prod {
            applicationId flavorApplicationId
        }
    }
    signingConfigs {
        release {
            storeFile file("keystore.jks")
            storePassword getSecret("releaseStorePass", "n/a")
            keyAlias "j2d"
            keyPassword getSecret("releaseKeyPass", "n/a")
        }
    }
    buildTypes {

        debug {
            // explicitly change the package of the debug builds
            applicationIdSuffix ".debug"
        }

        release {
            signingConfig signingConfigs.release

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    compile 'com.android.support:appcompat-v7:25.0.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }

    compile 'com.jakewharton.timber:timber:4.3.1'
    // debug lib
    debugCompile 'com.facebook.stetho:stetho:1.4.1'
    debugCompile 'com.facebook.stetho:stetho-timber:1.4.1'
    debugCompile 'com.facebook.stetho:stetho-urlconnection:1.4.1'
    // debugCompile 'com.facebook.stetho:stetho-okhttp3:1.4.1'
}

afterEvaluate {
    // load local secrets into project as properties
    loadProperties("localSecrets.properties")
    // init fabric.properties
    buildFabricPropertiesIfNeeded()
}